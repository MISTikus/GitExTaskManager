<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0-windows</TargetFramework>
    <VersionPrefix>0.2.1-alpha</VersionPrefix>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <UseWindowsForms>true</UseWindowsForms>
    <LangVersion>11</LangVersion>
    <ImplicitUsings>true</ImplicitUsings>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
  </PropertyGroup>
  
  <PropertyGroup>
    <_GitExtensionsDownloadPath>$([System.IO.Path]::Combine('$(ProjectDir)', '$(GitExtensionsDownloadPath)'))</_GitExtensionsDownloadPath>
    <_GitExtensionsDownloadScriptPath>$([System.IO.Path]::Combine('$(MSBuildThisFileDirectory)', 'Download-GitExtensions.ps1'))</_GitExtensionsDownloadScriptPath>
  </PropertyGroup>

  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>GitExTaskManager.UnitTests</_Parameter1>
    </AssemblyAttribute>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
      <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
  
  <PropertyGroup>
    <GitExtensionsReferenceVersion>v4.2</GitExtensionsReferenceVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <PackageReference Include="YamlDotNet" Version="13.7.1">
      <GeneratePathProperty>True</GeneratePathProperty>
    </PackageReference>
  </ItemGroup>

  <!-- Reference to GitExtensions dlls. -->
  <ItemGroup>
    <Reference Include="GitExtUtils" HintPath="$(GitExtensionsDownloadPath)\GitExtUtils.dll" />
    <Reference Include="GitUI" HintPath="$(GitExtensionsDownloadPath)\GitUI.dll" />
    <Reference Include="GitUIPluginInterfaces" HintPath="$(GitExtensionsDownloadPath)\GitUIPluginInterfaces.dll" />
    <Reference Include="ResourceManager" HintPath="$(GitExtensionsDownloadPath)\ResourceManager.dll" />
    <Reference Include="System.ComponentModel.Composition" HintPath="$(GitExtensionsDownloadPath)\System.ComponentModel.Composition.dll" />
  </ItemGroup>

  <!-- Pack as .nupkg with dependency -->
  <PropertyGroup>
    <NuspecFile>$(MSBuildThisFileDirectory)$(MSBuildProjectName).nuspec</NuspecFile>
    <Authors>MISTikus</Authors>
    <Company>TakeDareCom</Company>
    <Description>GitExtensions local task manager plugin.</Description>
    <PackageProjectUrl>https://github.com/MISTikus/GitExTaskManager</PackageProjectUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReadmeFile>..\..\..\..\..\README.md</PackageReadmeFile>
    <PackageIcon>..\..\..\..\..\assets\TaskManager.png</PackageIcon>
    <PackageTags>GitExtensions;TaskManager</PackageTags>
  </PropertyGroup>
  <Target Name="SetPackageProperties" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <NuspecProperties>
        id=$(PackageId);
        version=$(PackageVersion);
        configuration=$(Configuration);
        tags=$(PackageTags.Replace(';',' '));
        projectUrl=$(PackageProjectUrl);
        repositoryUrl=$(RepositoryUrl);
        repositoryType=$(RepositoryType);
        repositoryCommit=$(RepositoryCommit);
        author=$(Authors);
        icon=$(PackageIcon);
        readme=$(PackageReadmeFile);
        copyright=$(Copyright);
        description=$(Description);
        targetDir=$(TargetDir);
      </NuspecProperties>
    </PropertyGroup>
  </Target>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Message Text="Executing postbuild event provided $(PkgYamlDotNet)" />
    <MakeDir Directories="$(GitExtensionsPluginsPath)" />
    <Copy SourceFiles="$(TargetPath)" DestinationFolder="$([System.IO.Path]::Combine('$(GitExtensionsPluginsPath)', '$(ProjectName)'))" />
    <Copy SourceFiles="$(PkgYamlDotNet)\lib\net6.0\YamlDotNet.dll" DestinationFolder="$([System.IO.Path]::Combine('$(GitExtensionsPluginsPath)', '$(ProjectName)'))" />
    <Message Text="Completed postbuild event provided" />
  </Target>

  <Target Name="PreBuild" BeforeTargets="$(BuildDependsOn)">
    <Message Text="Executing prebuild event provided by GitExtensions.Extensibility" />
    <MakeDir Directories="$(_GitExtensionsDownloadPath)" />
    <Error Condition="!Exists($(GitExtensionsExecutablePath)) and !Exists($(_GitExtensionsDownloadScriptPath))" Text="Path to Git Extensions portable download script is wrong. Current value '$(_GitExtensionsDownloadScriptPath)'." />
    <Exec Condition="!Exists($(GitExtensionsExecutablePath))" Command="powershell.exe -ExecutionPolicy Unrestricted $(_GitExtensionsDownloadScriptPath) -ExtractRootPath $(_GitExtensionsDownloadPath) -Version $(GitExtensionsReferenceVersion) -Source $(GitExtensionsReferenceSource)" />
    <Copy Condition="!Exists('$(TargetDir)YamlDotNet.dll')" SourceFiles="$(PkgYamlDotNet)\lib\net6.0\YamlDotNet.dll" DestinationFolder="$(TargetDir)" />
    <Message Text="Completed prebuild event provided by GitExtensions.Extensibility" />
  </Target>

</Project>
